# options.toml: This file contains general options for the code

# parallel: Whether or not to utilize multiple CPUs to fit spaxels in parallel
parallel = true

# plot_spaxels: The plotting backend for 1D spaxel fits. Can be "pyplot", "plotly", or "both".
plot_spaxels = "pyplot"

# plot_maps: Whether or not to plot 2D parameter maps at the end of fitting.
plot_maps = true

# save_fits: Whether or not to save the model parameters and the model itself as FITS files at the end of fitting.
save_fits = true

# n_bootstrap: The number of bootstrapping iterations to perform during fitting, which
# is used to estimate the uncertainties on parameters given the uncertainties in the data.
n_bootstrap = 0

# random_seed: Set the random seed for bootstrapping
random_seed = 123456789

# overwrite: This controls what to do in case the fit for a certain spaxel
# has already been performed / saved.  If true, the fit will be performed again
# and the old one will be overwritten.  Otherwise, it won't.
overwrite = false

# track_memory: This controls whether an additional log file is saved for each
# spaxel which specifically tracks the memory usage / allocations during the
# spaxel fitting. Useful if memory usage is higher than expected.
track_memory = false

# track_convergence: Similarly, this controls whether an additional log file is
# generated which prints convergence information for each spaxel fit (but only
# for the LINE fit). Be warned that the way Optim.jl works with the simulated
# annealing method SAMIN makes it always print "status: failure" even if convergence
# was reached. The way to tell whether convergence was ACTUALLY reached is if
# the number of iterations reached the maximum (which is 10^6 by default).
track_convergence = true

# make_movies: Whether or not to save mp4 files of the data and final models of
# IFU cubes. This option require the user to have FFMPeg (https://ffmpeg.org/),
# as well as the FFMPeg and Astropy python packages, installed on their system.
# These are not necessarily scientifically useful, but they're pretty to watch.
make_movies = false

# save_full_model: Whether or not to save the full model of each spaxel in IFU cube
# format. If false, the model parameters will still be saved (the model can be
# easily reconstructed by simply rerunning the code with this option enabled, as the
# fitting data for each spaxel will already be saved)
save_full_model = true

# extinction_curve: May be "kvt" for the Kemper, Vriend, & Tielens (2004) 
# extinction profile, "ct" for the Chiar & Tielens (2005) extinction profile,
# "ohm" for the Ossenkopf, Henning, & Mathis (1992) extinction profile, or "d+" for the 
# Donnan et al. (2022) extinction profile.
# optical options: may be either "calzetti" for the Calzetti et al. (2000) starburst galaxy curve,
# or "ccm" for the Cardelli, Clayton, & Mathis (1989) Milky Way curve.
extinction_curve = "ccm"

# extinction_screen: Controls whether extinction is modeled as e^-tau (true) or
# (1 - e^-tau) / tau (false), following PAHFIT.
extinction_screen = false

# whether or not to fit silicate emission
fit_sil_emission = true

# whether or not to fit optical Fe II emission (obviously only applies for optical spectra)
# separate options for narrow- and broad-line templates
fit_opt_na_feii = false
fit_opt_br_feii = false

# whether or not to constrain the PAH emission using templates from Smith et al. (2007)
use_pah_templates = false

# fit_joint: this option decides whether or not lines should be fit jointly with the continuum. If false,
# the lines will first be masked out during the continuum fitting, and then the continuum model will be 
# subtracted during the line fitting. If true, the continuum and lines are fit simultaneously. This option
# is incompatible with the use_pah_templates option (only one may be true at a time).
# Note: It is recommended to use FALSE for fitting MIR data, and TRUE for fitting optical data.
fit_joint = true

# whether or not to use simulated annealing on ALL spaxels (if false, only uses it for the initial fit
# to the sum of all spaxels, and subsequent individual-spaxel fits are only done with a local Lev-Mar fit,
# which is typically sufficient as long as the lines one wishes to fit are prominent in the sum of all spaxels)
fit_all_samin = false

# whether or not to fit the UV bump for the calzetti attenuation curve
fit_uv_bump = false

# whether or not to fit a dust covering fraction for the calzetti attenuation curve
fit_covering_frac = false

# user_mask = []
user_mask = [[0.42992, 0.43091], [0.47545, 0.47995]]

# which lines should be tested for additional components
# line_test_lines = []
line_test_lines = [["OIII_05008", "OIII_04960"]]

# a threshold value on the chi^2 ratio (1 - chi^2_line/chi^2_noline) to determine how significant additional line 
# components must be in order to include them in a fit
line_test_threshold = 0.25

# whether or not to plot the results of line testing
plot_line_test = true

# cosmology options: Controls the cosmology used for distance / luminosity calculations.
# If h is set to 1, the distances in plot scale bars will be shown with h^-1 units.
[cosmology]
h = 1.0           # Hubble constant (in km s^-1 Mpc^-1) / 100
omega_m = 0.27    # matter density parameter
omega_K = 0.0     # curvature density parameter
omega_r = 0.0     # radiation density parameter
