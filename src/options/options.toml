# options.toml: This file contains general options for the code

# parallel: Whether or not to utilize multiple CPUs to fit spaxels in parallel
parallel = true

# plot_spaxels: The plotting backend for 1D spaxel fits. Can be "pyplot", "plotly", or "both".
plot_spaxels = "pyplot"

# plot_maps: Whether or not to plot 2D parameter maps at the end of fitting.
plot_maps = true

# save_fits: Whether or not to save the model parameters and the model itself as FITS files at the end of fitting.
save_fits = true

# n_bootstrap: The number of bootstrapping iterations to perform during fitting, which
# is used to estimate the uncertainties on parameters given the uncertainties in the data.
n_bootstrap = 0

# random_seed: Set the random seed for bootstrapping
random_seed = 123456789

# overwrite: This controls what to do in case the fit for a certain spaxel
# has already been performed / saved.  If true, the fit will be performed again
# and the old one will be overwritten.  Otherwise, it won't.
overwrite = false

# track_memory: This controls whether an additional log file is saved for each
# spaxel which specifically tracks the memory usage / allocations during the
# spaxel fitting. Useful if memory usage is higher than expected.
track_memory = false

# track_convergence: Similarly, this controls whether an additional log file is
# generated which prints convergence information for each spaxel fit (but only
# for the LINE fit). Be warned that the way Optim.jl works with the simulated
# annealing method SAMIN makes it always print "status: failure" even if convergence
# was reached. The way to tell whether convergence was ACTUALLY reached is if
# the number of iterations reached the maximum (which is 10^6 by default).
track_convergence = true

# make_movies: Whether or not to save mp4 files of the data and final models of
# IFU cubes. This option require the user to have FFMPeg (https://ffmpeg.org/),
# as well as the FFMPeg and Astropy python packages, installed on their system.
# These are not necessarily scientifically useful, but they're pretty to watch.
make_movies = false

# save_full_model: Whether or not to save the full model of each spaxel in IFU cube
# format. If false, the model parameters will still be saved (the model can be
# easily reconstructed by simply rerunning the code with this option enabled, as the
# fitting data for each spaxel will already be saved)
save_full_model = true

# extinction_curve: May be "kvt" for the Kemper, Vriend, & Tielens (2004) 
# extinction profile, "ct" for the Chiar & Tielens (2005) extinction profile,
# "ohm" for the Ossenkopf, Henning, & Mathis (1992) extinction profile, or "d+" for the 
# Donnan et al. (2022) extinction profile.
extinction_curve = "ohm"

# extinction_screen: Controls whether extinction is modeled as e^-tau (true) or
# (1 - e^-tau) / tau (false), following PAHFIT.
extinction_screen = false

# whether or not to fit silicate emission
fit_sil_emission = true

# whether or not to use simulated annealing on ALL spaxels (if false, only uses it for the initial fit
# to the sum of all spaxels, and subsequent individual-spaxel fits are only done with a local Lev-Mar fit,
# which is typically sufficient as long as the lines one wishes to fit are prominent in the sum of all spaxels)
fit_all_samin = false

# user_mask = [[11.80, 12.25]]
user_mask = []

# cosmology options: Controls the cosmology used for distance / luminosity calculations.
# If h is set to 1, the distances in plot scale bars will be shown with h^-1 units.
[cosmology]
h = 1.0          # Hubble constant (in km s^-1 Mpc^-1) / 100
omega_m = 0.3    # matter density parameter
omega_K = 0.0    # curvature density parameter
omega_r = 0.0    # radiation density parameter
